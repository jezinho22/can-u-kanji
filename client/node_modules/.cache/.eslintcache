[{"/Users/jez/Documents/projects/can-u-kanji/client/src/Components/Header.js":"1","/Users/jez/Documents/projects/can-u-kanji/client/src/Pages/Mykanji.js":"2","/Users/jez/Documents/projects/can-u-kanji/client/src/Pages/Allkanji.js":"3","/Users/jez/Documents/projects/can-u-kanji/client/src/Pages/Home.js":"4"},{"size":980,"mtime":1685098339605,"results":"5","hashOfConfig":"6"},{"size":3550,"mtime":1685098877093,"results":"7","hashOfConfig":"6"},{"size":3651,"mtime":1685098874142,"results":"8","hashOfConfig":"6"},{"size":1163,"mtime":1685103494272,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"kuhvv2",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jez/Documents/projects/can-u-kanji/client/src/Components/Header.js",[],[],"/Users/jez/Documents/projects/can-u-kanji/client/src/Pages/Mykanji.js",["24"],[],"import axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport KanjiCard from \"../Components/KanjiCard\";\nimport \"../Mykanji.css\"\n\n\nexport default function Mykanji({ logInEmail }) {\n    const [myKanji, setMyKanji] = useState([]);\n    const [userId, setUserId] = useState(\"\")\n\n    // use effect to fetch user's kanji from db at start\n    // and whenever logInEmail updates ie new user login\n    useEffect(() => {\n        getMyKanji();\n    }, [logInEmail]);\n\n    async function getMyKanji() {\n        // create server call for users email\n        const API = `https://can-u-kanji.onrender.com/mykanji/?email=${logInEmail}`;\n        const res = await axios.get(API);\n        // set myKanji as user's collection of kanji\n        setMyKanji(res.data.mykanji);\n        // set userId for use with delete and update\n        // which is actually always update\n        setUserId(res.data._id);\n    }\n\n    async function deleteKanji(id) {\n        // find kanji in myKanji and remove from array\n        const newMyKanji = [...myKanji];\n        const index = newMyKanji.findIndex((kanji) => kanji._id === id);\n        index >= 0 && newMyKanji.splice(index, 1);\n        // put together new update for db\n        const body = { email: logInEmail, mykanji: newMyKanji };\n        // send update to db\n        const API = `https://can-u-kanji.onrender.com/mykanji/${userId}`;\n        const result = await axios.put(API, body);\n        console.log(result)\n        // update myKanji state to reflect change\n        setMyKanji(newMyKanji);\n    }\n\n\n    function handleStrokeVideo(id){\n        console.log(id)\n        let newMyKanji = [...myKanji]\n        newMyKanji.map((kanji)=> {\n            if (kanji._id === id){\n                console.log(!kanji.playVideo)\n                return { ...kanji, playVideo: !kanji.playVideo\n            }} else {\n                return kanji\n            }\n        })\n        setMyKanji(newMyKanji)\n    }\nasync function updateRating(index, id){\n    console.log(index, id)\n            // find kanji in myKanji and remove from array\n            const newMyKanji = [...myKanji];\n            // does map return a new array every time?\n            // do we need to use eg filter\n            // need to set rating at kanjicard send to Rating\n            newMyKanji.map((kanji)=> kanji._id === id ? { ...kanji, rating:index} : kanji)\n            // put together new update for db\n            const body = {email:logInEmail, mykanji:newMyKanji}\n            console.log(body)\n            // send update to db\n            const API = `https://can-u-kanji.onrender.com/mykanji/${userId}`;\n            const result = await axios.put(API, body);\n            console.log(result)\n            // update myKanji state to reflect change\n            setMyKanji(newMyKanji);\n}\n\n\n    return (\n        <div className=\"sub-heading\">\n            <h2>My Kanji: {logInEmail}</h2>\n            <button style={{ marginLeft: \"210px\", marginTop: \"1.5rem\" }} onClick={getMyKanji}>\n                Get My Kanji\n            </button>\n            <div className=\"card-display-space\">\n\n                   {myKanji && myKanji.map((kanji, index) => {\n                        return (\n                        <KanjiCard  index={index}\n                                    kanji={kanji} \n                                    handleStrokeVideo={handleStrokeVideo} \n                                    deleteKanji={deleteKanji}\n                                    updateRating={updateRating}/>\n                        )})}\n\n            </div>\n        </div>\n    );\n}\n","/Users/jez/Documents/projects/can-u-kanji/client/src/Pages/Allkanji.js",["25"],[],"import Dropdown from \"react-dropdown\";\nimport Checkbox2 from \"../Components/Checkbox2\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport default function Allkanji({logInEmail }) {\n    const options = [\"Grade 1\", \"Grade 2\", \"Grade 3\", \"Grade 4\", \"Grade 5\", \"Grade 6\"];\n    const defaultOption = \"Select grade\";\n    const [myKanji, setMyKanji] = useState([]);\n    const [grade, setGrade] = useState(\"\");\n    const [savedData, setSavedData] = useState(\"\")\n\n    // take selection from dropdown\n    function handleSelect(event) {\n        if (event.value !== defaultOption) {\n            const gradeNumber = event.value.slice(-1);\n            setGrade(gradeNumber);\n        }\n    }\n\n    // when grade changes fetch kanji that match from API\n    useEffect(() => {\n        if (grade) {\n            getKanji();\n        }\n    }, [grade]);\n\n    // fetch kanji\n    async function getKanji() {\n        const url = `https://can-u-kanji.onrender.com/kanji/${grade}`;\n        const res = await axios.get(url);\n        console.log(res.data.length);\n        const results = res.data;\n        // add checked : false to all kanji, for checkboxes\n        results.map((kanji) => ({ ...kanji, checked: false }));\n        setMyKanji(res.data);\n    }\n\n    function selectAll() {\n        setMyKanji(myKanji.map((kanji) => ({ ...kanji, checked: true })));\n    }\n\n    function unSelectAll() {\n        setMyKanji(myKanji.map((kanji) => ({ ...kanji, checked: false })));\n    }\n\n    // deal with clicks on the checkboxes\n    function updateCheckStatus(index) {\n        setMyKanji(\n            myKanji.map((kanji, currentIndex) => {\n                if (currentIndex === index) {\n                    return { ...kanji, checked: !kanji.checked };\n                } else {\n                    return kanji;\n                }\n            })\n        );\n    }\n\n    async function handleSubmit() {\n        // filter to get checked kanji only\n        if (logInEmail){\n        const myCheckedKanji = myKanji.filter((kanji) => kanji.checked === true);\n        // construct data object to send to server\n        const body = { email: logInEmail, mykanji: myCheckedKanji };\n        // post\n        const url = `https://can-u-kanji.onrender.com/kanji/`;\n        await axios.post(url, body);\n        setSavedData(`You have saved ${body.mykanji.length} under the email address: ${logInEmail}`)\n        } else {\n            alert(\"You need to log in before you can save\")\n        }\n    }\n\n    return (\n        <div>\n            <h2 className=\"sub-heading\">All Kanji</h2>\n\n            <Dropdown options={options} onChange={handleSelect} value={defaultOption} />\n            \n            {myKanji.length > 0 && (\n                <div className=\"button-container\">\n                    <button onClick={selectAll}>Select All</button>\n                    <button onClick={unSelectAll}>Unselect All</button>\n                    <button className=\"submitButton\" onClick={handleSubmit}>\n                        Save choices\n                    </button>\n                    <p>{savedData}</p>\n                </div>\n            )}\n            <div className=\"kanji\">\n                {myKanji &&\n                    myKanji.map((kanji, index) => (\n                        <Checkbox2\n                            key={index}\n                            isChecked={kanji.checked}\n                            checkHandler={() => updateCheckStatus(index)}\n                            label={kanji.name}\n                            index={index}\n                            kanji={kanji}\n                        />\n                    ))}\n            </div>\n\n        </div>\n    );\n}\n","/Users/jez/Documents/projects/can-u-kanji/client/src/Pages/Home.js",[],[],{"ruleId":"26","severity":1,"message":"27","line":15,"column":8,"nodeType":"28","endLine":15,"endColumn":20,"suggestions":"29"},{"ruleId":"26","severity":1,"message":"30","line":26,"column":8,"nodeType":"28","endLine":26,"endColumn":15,"suggestions":"31"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMyKanji'. Either include it or remove the dependency array.","ArrayExpression",["32"],"React Hook useEffect has a missing dependency: 'getKanji'. Either include it or remove the dependency array.",["33"],{"desc":"34","fix":"35"},{"desc":"36","fix":"37"},"Update the dependencies array to be: [getMyKanji, logInEmail]",{"range":"38","text":"39"},"Update the dependencies array to be: [getKanji, grade]",{"range":"40","text":"41"},[456,468],"[getMyKanji, logInEmail]",[850,857],"[getKanji, grade]"]